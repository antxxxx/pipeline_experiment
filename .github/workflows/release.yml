name: release to environments


on:
  workflow_dispatch:

env:
  BRANCH_NAME: ${{ github.event.ref.BRANCH_NAME }}

jobs:
  quality_checks:
    uses: ./.github/workflows/quality_checks.yml
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  get_commit_id:
    runs-on: ubuntu-latest
    outputs:
      commit_id: ${{ steps.commit_id.outputs.commit_id }}
    steps:
      - name: Get Commit ID
        id: commit_id
        run: |
          echo "commit_id=${{ github.sha }}" >> "$GITHUB_OUTPUT"

  tag_release:
    needs: quality_checks
    runs-on: ubuntu-latest
    outputs:
      spec_version: ${{steps.output_spec_version.outputs.SPEC_VERSION}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BRANCH_NAME }}
          fetch-depth: 0

      # using git commit sha for version of action to ensure we have stable version
      - name: Install asdf
        uses: asdf-vm/actions/setup@05e0d2ed97b598bfce82fd30daf324ae0c4570e6
        with:
          asdf_branch: v0.11.3
  
      - name: Cache asdf
        uses: actions/cache@v3
        with:
          path: |
            ~/.asdf
          key: ${{ runner.os }}-asdf-${{ hashFiles('**/.tool-versions') }}
          restore-keys: |
            ${{ runner.os }}-asdf-

      - name: Install asdf dependencies in .tool-versions
        uses: asdf-vm/actions/install@05e0d2ed97b598bfce82fd30daf324ae0c4570e6
        with:
          asdf_branch: v0.11.3
        env:
          PYTHON_CONFIGURE_OPTS: --enable-shared 
  
      - name: Install node packages
        run: |
          make install-node

      # use semantic-release to determine the next version number
      - name: Dry run to get the next release version
        id: tag_version
        run: |
          export SPEC_VERSION=$(npx semantic-release --dry-run | grep -i 'The next release version is' | sed -E 's/.* ([[:digit:].]+)$/\1/')
          echo "new_tag_version=${SPEC_VERSION}" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: tag release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx semantic-release

      - name: Get release
        id: get_release
        uses: cardinalby/git-get-release-action@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag: ${{ env.SPEC_VERSION }}

      - name: Edit Release
        uses: irongut/EditRelease@v1.2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          id: ${{ steps.get_release.outputs.id }}
          body: |
            ## Info
            [See code diff](${{ github.event.compare }})
            [Release workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

            It was initialized by [${{ github.event.sender.login }}](${{ github.event.sender.html_url }})

      - name: output SPEC_VERSION
        id: output_spec_version
        run: |
          echo "## RELEASE TAG :** ${{ env.SPEC_VERSION  }}" >> "$GITHUB_STEP_SUMMARY"
          echo "SPEC_VERSION=${{ env.SPEC_VERSION }}" >> "$GITHUB_OUTPUT"
  package_code:
    needs: tag_release
    uses: ./.github/workflows/sam_package_code.yml

  release_dev:
    needs: [tag_release, package_code, get_commit_id]
    uses: ./.github/workflows/sam_release_code.yml
    with:
      ARTIFACT_BUCKET_PREFIX: ${{needs.tag_release.outputs.spec_version}}
      STACK_NAME: dev-ci
      TARGET_ENVIRONMENT: dev
      ENABLE_MUTUAL_TLS: true
      DEPLOY_SANDBOX: false
      BUILD_ARTIFACT: packaged_code
      TRUSTSTORE_FILE: truststore.pem
      VERSION_NUMBER: ${{needs.tag_release.outputs.spec_version}}
      COMMIT_ID: ${{needs.get_commit_id.outputs.commit_id}}
      LOG_LEVEL: DEBUG
      LOG_RETENTION_DAYS: 30
      CREATE_INT_RELEASE_NOTES: true
      CREATE_PROD_RELEASE_NOTES: true
    secrets:
      CLOUD_FORMATION_DEPLOY_ROLE: ${{ secrets.DEV_CLOUD_FORMATION_DEPLOY_ROLE }}
      TARGET_SPINE_SERVER: ${{ secrets.DEV_TARGET_SPINE_SERVER }}
      DEV_CLOUD_FORMATION_DEPLOY_ROLE: ${{ secrets.DEV_CLOUD_FORMATION_DEPLOY_ROLE }}
      INT_CLOUD_FORMATION_DEPLOY_ROLE: ${{ secrets.INT_CLOUD_FORMATION_DEPLOY_ROLE }}
      PROD_CLOUD_FORMATION_DEPLOY_ROLE: ${{ secrets.PROD_CLOUD_FORMATION_DEPLOY_ROLE }}

  release_dev_sandbox:
    needs: [tag_release, package_code, get_commit_id]
    uses: ./.github/workflows/sam_release_code.yml
    with:
      ARTIFACT_BUCKET_PREFIX: ${{needs.tag_release.outputs.spec_version}}
      STACK_NAME: dev-sandbox
      TARGET_ENVIRONMENT: dev-sandbox
      ENABLE_MUTUAL_TLS: true
      DEPLOY_SANDBOX: true
      BUILD_ARTIFACT: packaged_sandbox_code
      TRUSTSTORE_FILE: sandbox-truststore.pem
      VERSION_NUMBER: ${{needs.tag_release.outputs.spec_version}}
      COMMIT_ID: ${{needs.get_commit_id.outputs.commit_id}}
      LOG_LEVEL: DEBUG
      LOG_RETENTION_DAYS: 30
    secrets:
      CLOUD_FORMATION_DEPLOY_ROLE: ${{ secrets.DEV_CLOUD_FORMATION_DEPLOY_ROLE }}
      TARGET_SPINE_SERVER: sandbox

  release_ref:
    needs: [tag_release, release_dev, release_dev_sandbox, package_code, get_commit_id]
    uses: ./.github/workflows/sam_release_code.yml
    with:
      ARTIFACT_BUCKET_PREFIX: ${{needs.tag_release.outputs.spec_version}}
      STACK_NAME: ref-ci
      TARGET_ENVIRONMENT: ref
      ENABLE_MUTUAL_TLS: true
      DEPLOY_SANDBOX: false
      BUILD_ARTIFACT: packaged_code
      TRUSTSTORE_FILE: truststore.pem
      VERSION_NUMBER: ${{needs.tag_release.outputs.spec_version}}
      COMMIT_ID: ${{needs.get_commit_id.outputs.commit_id}}
      LOG_LEVEL: DEBUG
      LOG_RETENTION_DAYS: 30
    secrets:
      CLOUD_FORMATION_DEPLOY_ROLE: ${{ secrets.REF_CLOUD_FORMATION_DEPLOY_ROLE }}
      TARGET_SPINE_SERVER: ${{ secrets.REF_TARGET_SPINE_SERVER }}

  release_qa:
    needs: [tag_release, release_dev, release_dev_sandbox, package_code, get_commit_id]
    uses: ./.github/workflows/sam_release_code.yml
    with:
      ARTIFACT_BUCKET_PREFIX: ${{needs.tag_release.outputs.spec_version}}
      STACK_NAME: qa-ci
      TARGET_ENVIRONMENT: qa
      ENABLE_MUTUAL_TLS: true
      DEPLOY_SANDBOX: false
      BUILD_ARTIFACT: packaged_code
      TRUSTSTORE_FILE: truststore.pem
      VERSION_NUMBER: ${{needs.tag_release.outputs.spec_version}}
      COMMIT_ID: ${{needs.get_commit_id.outputs.commit_id}}
      LOG_LEVEL: DEBUG
      LOG_RETENTION_DAYS: 30
    secrets:
      CLOUD_FORMATION_DEPLOY_ROLE: ${{ secrets.QA_CLOUD_FORMATION_DEPLOY_ROLE }}
      TARGET_SPINE_SERVER: ${{ secrets.QA_TARGET_SPINE_SERVER }}

  release_int:
    needs: [tag_release, release_qa, package_code, get_commit_id]
    uses: ./.github/workflows/sam_release_code.yml
    with:
      ARTIFACT_BUCKET_PREFIX: ${{needs.tag_release.outputs.spec_version}}
      STACK_NAME: int-ci
      TARGET_ENVIRONMENT: int
      ENABLE_MUTUAL_TLS: true
      DEPLOY_SANDBOX: false
      BUILD_ARTIFACT: packaged_code
      TRUSTSTORE_FILE: truststore.pem
      VERSION_NUMBER: ${{needs.tag_release.outputs.spec_version}}
      COMMIT_ID: ${{needs.get_commit_id.outputs.commit_id}}
      LOG_LEVEL: DEBUG
      LOG_RETENTION_DAYS: 30
      CREATE_INT_RELEASE_NOTES: true
      CREATE_INT_RC_RELEASE_NOTES: true
    secrets:
      CLOUD_FORMATION_DEPLOY_ROLE: ${{ secrets.INT_CLOUD_FORMATION_DEPLOY_ROLE }}
      TARGET_SPINE_SERVER: ${{ secrets.INT_TARGET_SPINE_SERVER }}
      DEV_CLOUD_FORMATION_DEPLOY_ROLE: ${{ secrets.DEV_CLOUD_FORMATION_DEPLOY_ROLE }}
      INT_CLOUD_FORMATION_DEPLOY_ROLE: ${{ secrets.INT_CLOUD_FORMATION_DEPLOY_ROLE }}
      PROD_CLOUD_FORMATION_DEPLOY_ROLE: ${{ secrets.PROD_CLOUD_FORMATION_DEPLOY_ROLE }}

  release_sandbox:
    needs: [tag_release, release_qa, package_code, get_commit_id]
    uses: ./.github/workflows/sam_release_code.yml
    with:
      ARTIFACT_BUCKET_PREFIX: ${{needs.tag_release.outputs.spec_version}}
      STACK_NAME: int-sandox
      TARGET_ENVIRONMENT: sandbox
      ENABLE_MUTUAL_TLS: true
      DEPLOY_SANDBOX: true
      BUILD_ARTIFACT: packaged_sandbox_code
      TRUSTSTORE_FILE: sandbox-truststore.pem
      VERSION_NUMBER: ${{needs.tag_release.outputs.spec_version}}
      COMMIT_ID: ${{needs.get_commit_id.outputs.commit_id}}
      LOG_LEVEL: DEBUG
      LOG_RETENTION_DAYS: 30
    secrets:
      CLOUD_FORMATION_DEPLOY_ROLE: ${{ secrets.INT_CLOUD_FORMATION_DEPLOY_ROLE }}
      TARGET_SPINE_SERVER: sandbox

  release_prod:
    needs: [tag_release, release_int, release_sandbox, package_code, get_commit_id]
    uses: ./.github/workflows/sam_release_code.yml
    with:
      ARTIFACT_BUCKET_PREFIX: ${{needs.tag_release.outputs.spec_version}}
      STACK_NAME: prod-ci
      TARGET_ENVIRONMENT: prod
      ENABLE_MUTUAL_TLS: true
      DEPLOY_SANDBOX: false
      BUILD_ARTIFACT: packaged_code
      TRUSTSTORE_FILE: truststore.pem
      VERSION_NUMBER: ${{needs.tag_release.outputs.spec_version}}
      COMMIT_ID: ${{needs.get_commit_id.outputs.commit_id}}
      LOG_LEVEL: INFO
      LOG_RETENTION_DAYS: 731
      MARK_JIRA_RELEASED: true
      CREATE_PROD_RELEASE_NOTES: true
    secrets:
      CLOUD_FORMATION_DEPLOY_ROLE: ${{ secrets.PROD_CLOUD_FORMATION_DEPLOY_ROLE }}
      TARGET_SPINE_SERVER: ${{ secrets.PROD_TARGET_SPINE_SERVER }}
      DEV_CLOUD_FORMATION_DEPLOY_ROLE: ${{ secrets.DEV_CLOUD_FORMATION_DEPLOY_ROLE }}
      INT_CLOUD_FORMATION_DEPLOY_ROLE: ${{ secrets.INT_CLOUD_FORMATION_DEPLOY_ROLE }}
      PROD_CLOUD_FORMATION_DEPLOY_ROLE: ${{ secrets.PROD_CLOUD_FORMATION_DEPLOY_ROLE }}
