name: sam release code

on:
  workflow_call:
    inputs:
      STACK_NAME:
        required: true
        type: string
      ARTIFACT_BUCKET_PREFIX:
        required: true
        type: string
      TARGET_ENVIRONMENT:
        required: true
        type: string
      ENABLE_MUTUAL_TLS:
        required: true
        type: string
      BUILD_ARTIFACT:
        required: true
        type: string
      DEPLOY_SANDBOX:
        required: true
        type: string
      TRUSTSTORE_FILE:
        required: true
        type: string
      VERSION_NUMBER:
        required: true
        type: string
      COMMIT_ID:
        required: true
        type: string
      LOG_LEVEL:
        required: true
        type: string
      LOG_RETENTION_DAYS:
        required: true
        type: string
      CREATE_INT_RELEASE_NOTES:
        type: boolean
        default: false
      CREATE_INT_RC_RELEASE_NOTES:
        type: boolean
        default: false
      CREATE_PROD_RELEASE_NOTES:
        type: boolean
        default: false
      MARK_JIRA_RELEASED:
        type: boolean
        default: false
    secrets:
      CLOUD_FORMATION_DEPLOY_ROLE:
        required: true
      SPLUNK_HEC_TOKEN:
        required: true
      TARGET_SPINE_SERVER:
        required: true
      DEV_CLOUD_FORMATION_DEPLOY_ROLE:
        required: false
      INT_CLOUD_FORMATION_DEPLOY_ROLE:
        required: false
      PROD_CLOUD_FORMATION_DEPLOY_ROLE:
        required: false
      
jobs:
  environment_confirmation:
    runs-on: ubuntu-latest
    environment: ${{ inputs.TARGET_ENVIRONMENT }}
    permissions:
      id-token: write
      contents: read
    steps:
      - shell: bash
        name: confirm release environment
        run: |
          echo "Deploying to {{ inputs.TARGET_ENVIRONMENT }}"

  create_int_release_notes_pre_int:
    if: ${{ inputs.CREATE_INT_RC_RELEASE_NOTES == true }}
    uses: ./.github/workflows/create_confluence_release_notes.yml
    needs: [force_environment_confirmation]
    with:
      TARGET_ENVIRONMENT: int
      TARGET_TAG: ${{ inputs.VERSION_NUMBER }}
      MARK_JIRA_RELEASED: false
      CONFLUENCE_PAGE_ID: "710051481"
      CREATE_RC_RELEASE_NOTES: true
    secrets:
      DEV_CLOUD_FORMATION_DEPLOY_ROLE: ${{ secrets.DEV_CLOUD_FORMATION_DEPLOY_ROLE }}
      TARGET_CLOUD_FORMATION_DEPLOY_ROLE: ${{ secrets.INT_CLOUD_FORMATION_DEPLOY_ROLE }}

  sam_release_code:
    needs: [create_int_release_notes_pre_int]
    if: ${{ always() && !failure() && !cancelled() }} 
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - shell: bash
        name: release code
        run: |
          env

  create_int_release_notes_post_dev_or_int:
    needs: [sam_release_code]
    if: ${{ inputs.CREATE_INT_RELEASE_NOTES == true }}
    uses: ./.github/workflows/create_confluence_release_notes.yml
    with:
      TARGET_ENVIRONMENT: int
      MARK_JIRA_RELEASED: false
      CONFLUENCE_PAGE_ID: "693750027"
      CREATE_RC_RELEASE_NOTES: false
    secrets:
      DEV_CLOUD_FORMATION_DEPLOY_ROLE: ${{ secrets.DEV_CLOUD_FORMATION_DEPLOY_ROLE }}
      TARGET_CLOUD_FORMATION_DEPLOY_ROLE: ${{ secrets.INT_CLOUD_FORMATION_DEPLOY_ROLE }}

  create_prod_release_notes_post_dev:
    needs: [sam_release_code]
    if: ${{ inputs.CREATE_PROD_RELEASE_NOTES == true }} 
    uses: ./.github/workflows/create_confluence_release_notes.yml
    with:
      TARGET_ENVIRONMENT: prod
      MARK_JIRA_RELEASED: false
      CONFLUENCE_PAGE_ID: "693750029"
      CREATE_RC_RELEASE_NOTES: false
    secrets:
      DEV_CLOUD_FORMATION_DEPLOY_ROLE: ${{ secrets.DEV_CLOUD_FORMATION_DEPLOY_ROLE }}
      TARGET_CLOUD_FORMATION_DEPLOY_ROLE: ${{ secrets.PROD_CLOUD_FORMATION_DEPLOY_ROLE }}

  create_prod_release_notes_post_prod:
    needs: [sam_release_code]
    if: ${{ inputs.MARK_JIRA_RELEASED == true }} 
    uses: ./.github/workflows/create_confluence_release_notes.yml
    with:
      TARGET_ENVIRONMENT: prod
      MARK_JIRA_RELEASED: true
      CONFLUENCE_PAGE_ID: "693750029"
      CREATE_RC_RELEASE_NOTES: false
      RELEASE_VERSION: ${{ inputs.VERSION_NUMBER }}
    secrets:
      DEV_CLOUD_FORMATION_DEPLOY_ROLE: ${{ secrets.DEV_CLOUD_FORMATION_DEPLOY_ROLE }}
      TARGET_CLOUD_FORMATION_DEPLOY_ROLE: ${{ secrets.PROD_CLOUD_FORMATION_DEPLOY_ROLE }}
