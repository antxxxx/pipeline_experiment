name: tag release

on:
  push:
    branches: [main]
    tags: [hotfix**]

env:
  BRANCH_NAME: ${{ github.event.ref.BRANCH_NAME }}

jobs:
  quality_checks:
    uses: ./.github/workflows/quality_checks.yml

  get_tag:
    needs: quality_checks
    runs-on: ubuntu-latest
    outputs:
        spec_version: ${{steps.output_spec_version.outputs.SPEC_VERSION}}
    steps:
        - run: echo "event name is:" ${{ github.event_name }} 
        - run: echo "event type is:" ${{ github.event.action }} 

        - name: Checkout code
          uses: actions/checkout@v3
          with:
            ref: ${{ env.BRANCH_NAME }}
            fetch-depth: 0

        - name: Install asdf and dependencies
          uses: asdf-vm/actions/install@6a442392015fbbdd8b48696d41e0051b2698b2e4

        - name: Install python packages
          run: poetry install

        - name: Set SPEC_VERSION env var for merges to main
          run: echo "SPEC_VERSION=$(poetry run python scripts/calculate_version.py)" >> $GITHUB_ENV
          if: github.ref == 'refs/heads/main'

        - name: Set SPEC_VERSION env var for tags
          run: echo "SPEC_VERSION=v-${{  github.ref_name }}" >> $GITHUB_ENV
          if: github.ref != 'refs/heads/main'

        - name: output SPEC_VERSION
          id: output_spec_version
          run: echo SPEC_VERSION=${{ env.SPEC_VERSION }} >> $GITHUB_OUTPUT

  package_dev_code:
    needs: get_tag
    uses: ./.github/workflows/sam_package_code.yml
    with:
      TEMPLATE_FILE: dev-${{needs.get_tag.outputs.spec_version}}-deploy.yaml
      ARTIFACT_BUCKET_PREFIX: ${{needs.get_tag.outputs.spec_version}}
    secrets:
      CLOUD_FORMATION_DEPLOY_ROLE: ${{ secrets.DEV_CLOUD_FORMATION_DEPLOY_ROLE }}
          
  package_ref_code:
    needs: get_tag
    uses: ./.github/workflows/sam_package_code.yml
    with:
      TEMPLATE_FILE: ref-${{needs.get_tag.outputs.spec_version}}-deploy.yaml
      ARTIFACT_BUCKET_PREFIX: ${{needs.get_tag.outputs.spec_version}}
    secrets:
      CLOUD_FORMATION_DEPLOY_ROLE: ${{ secrets.REF_CLOUD_FORMATION_DEPLOY_ROLE }}
    
  package_qa_code:
    needs: get_tag
    uses: ./.github/workflows/sam_package_code.yml
    with:
      TEMPLATE_FILE: qa-${{needs.get_tag.outputs.spec_version}}-deploy.yaml
      ARTIFACT_BUCKET_PREFIX: ${{needs.get_tag.outputs.spec_version}}
    secrets:
      CLOUD_FORMATION_DEPLOY_ROLE: ${{ secrets.QA_CLOUD_FORMATION_DEPLOY_ROLE }}

  package_int_code:
    needs: get_tag
    uses: ./.github/workflows/sam_package_code.yml
    with:
      TEMPLATE_FILE: int-${{needs.get_tag.outputs.spec_version}}-deploy.yaml
      ARTIFACT_BUCKET_PREFIX: ${{needs.get_tag.outputs.spec_version}}
    secrets:
      CLOUD_FORMATION_DEPLOY_ROLE: ${{ secrets.INT_CLOUD_FORMATION_DEPLOY_ROLE }}
          
  package_prod_code:
    needs: get_tag
    uses: ./.github/workflows/sam_package_code.yml
    with:
      TEMPLATE_FILE: prod-${{needs.get_tag.outputs.spec_version}}-deploy.yaml
      ARTIFACT_BUCKET_PREFIX: ${{needs.get_tag.outputs.spec_version}}
    secrets:
      CLOUD_FORMATION_DEPLOY_ROLE: ${{ secrets.PROD_CLOUD_FORMATION_DEPLOY_ROLE }}
    
  create_draft_release:
    needs: 
      - get_tag
      - package_dev_code
      - package_ref_code
      - package_qa_code
      - package_int_code
      - package_prod_code
    runs-on: ubuntu-latest
    steps:
        - name: Create draft release
          id: create_draft_release
          uses: actions/create-release@v1
          continue-on-error: true
          env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
              tag_name: ${{needs.get_tag.outputs.spec_version}}
              release_name: ${{needs.get_tag.outputs.spec_version}}
              draft: true
              body: |
                ## Info
                [See code diff](${{ github.event.compare }}).
    
                It was initialized by [${{ github.event.sender.login }}](${{ github.event.sender.html_url }}).
    
                ## How to Promote?
                In order to promote this , edit the draft and press **"Publish release"**.
    
